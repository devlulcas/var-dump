---
import { getFirestore } from 'firebase-admin/firestore';
import pencilIcon from '../assets/icons/pencil.png';
import Button from '../components/Button.astro';
import OneBitIcon from '../components/OneBitIcon.astro';
import PostPreview from '../components/PostPreview.astro';
import { Editor } from '../islands/Editor';
import Layout from '../layouts/Layout.astro';
import { getAuthenticatedUser } from '../lib/firebase/auth';
import { app } from '../lib/firebase/server';
import type { Post } from '../lib/posts/types';

const authenticatedUser = await getAuthenticatedUser(Astro.cookies);

const db = getFirestore(app);
const postsRef = db.collection('posts');
const postsSnapshot = await postsRef.get();

const posts = postsSnapshot.docs.map((doc) => ({
  id: doc.id,
  ...doc.data(),
})) as Post[];
---

<Layout title="var_dump">
  <form class="flex flex-col gap-2 py-4" method="POST" action="/api/posts">
    <h2 class="text-2xl font-bold">add a new post</h2>
    <Editor name="content" client:load />
    <Button type="submit">
      <OneBitIcon src={pencilIcon.src} class="w-5 h-5 mr-2 filter-none" />
      <span>save content</span>
    </Button>
  </form>

  <ul class="divide-y border-y border-foreground">
    {
      posts.map((post) => (
        <li>
          <PostPreview post={post} currentUser={authenticatedUser} />
        </li>
      ))
    }
  </ul>
</Layout>
